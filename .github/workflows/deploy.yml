name: Build and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/dockerized-service:latest
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}

    # Authentification GCP
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    # Déploiement sur la VM
    - name: Deploy to VM using gcloud
      run: |
        # Créer un fichier .env temporaire
        echo "SECRET_MESSAGE=${{ secrets.SECRET_MESSAGE }}" > env_file
        echo "AUTH_USERNAME=${{ secrets.AUTH_USERNAME }}" >> env_file
        echo "AUTH_PASSWORD=${{ secrets.AUTH_PASSWORD }}" >> env_file

        # Copier le fichier .env vers la VM
        gcloud compute scp ./env_file rayanelouzazna13@nodejs-server:~/.env \
          --zone=${{ secrets.VM_ZONE }} \
          --project=${{ secrets.GCP_PROJECT_ID }}

        # Installer Docker si nécessaire + déployer le conteneur
        gcloud compute ssh rayanelouzazna13@nodejs-server \
          --zone=${{ secrets.VM_ZONE }} \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --command="
            if ! command -v docker &> /dev/null; then
              echo '>>> Installing Docker...'
              sudo apt update && sudo apt install -y docker.io
              sudo systemctl enable docker
              sudo systemctl start docker
            fi

            echo '>>> Deploying container...'
            docker pull ghcr.io/${{ github.repository_owner }}/dockerized-service:latest
            docker stop nodejs-app || true
            docker rm nodejs-app || true
            docker run -d -p 3000:3000 --env-file ~/.env --restart always --name nodejs-app ghcr.io/${{ github.repository_owner }}/dockerized-service:latest
          "
      shell: /usr/bin/bash -e
